<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Categories/NSData+Serialization.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cat/NSData(Serialization)</TokenIdentifier>
			<Abstract type="html">@brief NSData serialization/deserialization extension collection.</Abstract>
			<DeclaredIn>NSData.h</DeclaredIn>
			
			<NodeRef refid="47"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/NSData(Serialization)/propertyListObjectUsingFormat:error:</TokenIdentifier>
			<Abstract type="html">@brief Deserialize property list data to object.</Abstract>
			<DeclaredIn>NSData.h</DeclaredIn>			
			
			<Declaration>- (id)propertyListObjectUsingFormat:(NSPropertyListFormat *)format error:(NSError **)error</Declaration>
			<Parameters>
				<Parameter>
					<Name>format</Name>
					<Abstract type="html">A property list format. Possible values for format are described in &apos;NSPropertyListFormat&apos;.</Abstract>
				</Parameter><Parameter>
					<Name>error</Name>
					<Abstract type="html">If the method does not complete successfully, upon return contains an NSError object that describes the problem.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">Property list object. Usually NSArray or NSDictionary.</Abstract></ReturnValue>
			<Anchor>//api/name/propertyListObjectUsingFormat:error:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/NSData(Serialization)/hexadecimalString</TokenIdentifier>
			<Abstract type="html">@brief Serialized string in hexadecimal format.</Abstract>
			<DeclaredIn>NSData.h</DeclaredIn>			
			
			<Declaration>- (NSString *)hexadecimalString</Declaration>
			
			<ReturnValue><Abstract type="html">Hexadecimal string.</Abstract></ReturnValue>
			<Anchor>//api/name/hexadecimalString</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/NSData(Serialization)/initWithHexadecimalString:</TokenIdentifier>
			<Abstract type="html">@brief Initialize with deserialized data from hexadecimal string.</Abstract>
			<DeclaredIn>NSData.h</DeclaredIn>			
			
			<Declaration>- (id)initWithHexadecimalString:(NSString *)hexadecimal</Declaration>
			<Parameters>
				<Parameter>
					<Name>hexadecimal</Name>
					<Abstract type="html">Hexadecimal string.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/initWithHexadecimalString:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/NSData(Serialization)/dataWithHexadecimalString:</TokenIdentifier>
			<Abstract type="html">@brief Creates and returns deserialized data from hexadecimal string.</Abstract>
			<DeclaredIn>NSData.h</DeclaredIn>			
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/intfm/NSData(Serialization)/initWithHexadecimalString:</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>+ (id)dataWithHexadecimalString:(NSString *)hexadecimal</Declaration>
			
			
			<Anchor>//api/name/dataWithHexadecimalString:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/NSData(Serialization)/base64String</TokenIdentifier>
			<Abstract type="html">@brief Serialized string in base64 format.</Abstract>
			<DeclaredIn>NSData.h</DeclaredIn>			
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/intfm/NSData(Serialization)/initWithBase64String:</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/intfm/NSData(Serialization)/dataWithBase64String:</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (NSString *)base64String</Declaration>
			
			<ReturnValue><Abstract type="html">base64 string.</Abstract></ReturnValue>
			<Anchor>//api/name/base64String</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/NSData(Serialization)/initWithBase64String:</TokenIdentifier>
			<Abstract type="html">@brief Initialize with deserialized data from base64 string.</Abstract>
			<DeclaredIn>NSData.h</DeclaredIn>			
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/intfm/NSData(Serialization)/base64String</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (id)initWithBase64String:(NSString *)base64</Declaration>
			<Parameters>
				<Parameter>
					<Name>base64</Name>
					<Abstract type="html">base64 string.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">Initialized data object.</Abstract></ReturnValue>
			<Anchor>//api/name/initWithBase64String:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/NSData(Serialization)/dataWithBase64String:</TokenIdentifier>
			<Abstract type="html">@brief Creates and returns deserialized data from base64 string.</Abstract>
			<DeclaredIn>NSData.h</DeclaredIn>			
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/intfm/NSData(Serialization)/initWithBase64String:</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/intfm/NSData(Serialization)/base64String</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>+ (id)dataWithBase64String:(NSString *)base64</Declaration>
			
			<ReturnValue><Abstract type="html">Created data object.</Abstract></ReturnValue>
			<Anchor>//api/name/dataWithBase64String:</Anchor>
		</Token>
		
	</File>
</Tokens>